{{- if and (eq .chezmoi.os "darwin") (not .is_minimum) -}}
#!/usr/bin/env bash

set -eufo pipefail

source {{ .chezmoi.workingTree }}/lib/logs.sh

###############################################################################
# Shortcuts                                                                   #
###############################################################################

log_task 'Configuring shortcuts...'

DISABLED_SHORTCUT="<dict><key>enabled</key><false/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>65535</integer><integer>0</integer></array><key>type</key><string>standard</string></dict></dict>"

### Launchpad and Dock
# Activer ou désactiver le masquage du Dock - ENABLED (ALT + CMD + D)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 52 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>100</integer><integer>2</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"
# Afficher le Launchpad - ENABLED (ALT + CMD + L)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 160 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>108</integer><integer>37</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"

### Screen
# Réduire la luminosité de l'écran - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 53 "$DISABLED_SHORTCUT"
# Augmenter la luminosité de l'écran - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 54 "$DISABLED_SHORTCUT"

### Mission control
# Mission control - ENABLED (ALT + CMD + UP)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 32 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>126</integer><integer>12058624</integer></array><key>type</key><string>standard</string></dict></dict>"
# Afficher le centre de notification - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 163 "$DISABLED_SHORTCUT"
# Activer ou désactiver Ne pas déranger - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 175 "$DISABLED_SHORTCUT"
# Fenêtre de l'application - ENABLED (ALT + CMD + DOWN)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 33 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>125</integer><integer>12058624</integer></array><key>type</key><string>standard</string></dict></dict>"
# Afficher le bureau - ENABLED (ALT + CMD + B)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 36 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>98</integer><integer>11</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"
# Activer ou désactiver Stage Manager - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 222 "$DISABLED_SHORTCUT"
# Déplacer d'un Space vers la gauche - ENABLED (ALT + CMD + LEFT)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 79 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>123</integer><integer>12058624</integer></array><key>type</key><string>standard</string></dict></dict>"
# Déplacer d'un Space vers la droite - ENABLED (ALT + CMD + RIGHT)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 81 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>124</integer><integer>12058624</integer></array><key>type</key><string>standard</string></dict></dict>"
# Passer au Bureau n°1 - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 118 "$DISABLED_SHORTCUT"
# Passer au Bureau n°2 - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 119 "$DISABLED_SHORTCUT"
# Note rapide - ENABLED (ALT + CMD + N)
# defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 190 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>110</integer><integer>45</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"
# Note rapide - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 190 "$DISABLED_SHORTCUT"

### Keyboard
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 10 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 11 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 12 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 13 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 159 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 27 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 57 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 7 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 8 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 9 "$DISABLED_SHORTCUT"

### Input methods
# Sélectionner la méthode de saisie précédente - DISABLED (CRTL + SPACE)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 60 "<dict><key>enabled</key><false/><key>value</key><dict><key>parameters</key><array><integer>32</integer><integer>49</integer><integer>262144</integer></array><key>type</key><string>standard</string></dict></dict>"
# Sélectionner la méthode de saisie suivante - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 61 "<dict><key>enabled</key><false/><key>value</key><dict><key>parameters</key><array><integer>32</integer><integer>49</integer><integer>786432</integer></array><key>type</key><string>standard</string></dict></dict>"

### Screenshot
# Enregistrer l'image de l'écran sous forme de fichier - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 28 "$DISABLED_SHORTCUT"
# Copier l'image dans le presse-papier - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 29 "$DISABLED_SHORTCUT"
# Enregistrer l'image de la zone sélectionnée - ENABLED (CMD + SHIFT + ALT + S)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 30 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>115</integer><integer>1</integer><integer>1703936</integer></array><key>type</key><string>standard</string></dict></dict>"
# Copier l'image de la zone sélectionnée dans le presse-papier - ENABLED (CMD + SHIFT + S)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 31 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>115</integer><integer>1</integer><integer>1179648</integer></array><key>type</key><string>standard</string></dict></dict>"
# Options de capture d'écran et d'enregistrement - ENABLED (ALT + CMD + S)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 184 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>115</integer><integer>1</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"
# Enregistrer l'image de la Touch Bar dans un fichier - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 181 "$DISABLED_SHORTCUT"
# Copier l'image de la Touch Bar dans le presse-papier - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 182 "$DISABLED_SHORTCUT"

### Speaker overlay
# Activer ou désactiver l'incrustation de l'intervenant (petite) - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 224 "$DISABLED_SHORTCUT"
# Activer ou désactiver l'incrustation de l'intervenant (grande) - DISABLED
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 223 "$DISABLED_SHORTCUT"

### Services
defaults write pbs NSServicesStatus '
{
    "com.apple.BluetoothFileExchange - Send File To Bluetooth Device - sendFileUsingBluetoothOBEXService" =     {
        "key_equivalent" = "";
    };
    "com.apple.ChineseTextConverterService - Convert Text from Simplified to Traditional Chinese - convertTextToTraditionalChinese" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.ChineseTextConverterService - Convert Text from Traditional to Simplified Chinese - convertTextToSimplifiedChinese" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.ChineseTextConverterService - Convert Text to Full Width - convertTextToFullWidth" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.ChineseTextConverterService - Convert Text to Half Width - convertTextToHalfWidth" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Dictionary - Look Up in Dictionary - doLookupService" =     {
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.FolderActionsSetup - Folder Actions Setup - openFilesFromPasteboard" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.QuickTime.service.encodeSelectedAudioFiles - Encode Selected Audio Files - runWorkflowAsService" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Safari - Add to Reading List - addToReadingList" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Safari - Search With %WebSearchProvider@ - searchWithWebSearchProvider" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.SpotlightService - SEARCH_WITH_SPOTLIGHT - doSearchWithSpotlight" =     {
        "key_equivalent" = "";
    };
    "com.apple.Stickies - Make Sticky - makeStickyFromTextService" =     {
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Terminal - New Terminal Tab at Folder - newTerminalAtFolder" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Terminal - New Terminal at Folder - newTerminalAtFolder" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Terminal - Open man Page in Terminal - openManPage" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.Terminal - Search man Page Index in Terminal - searchManPages" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "key_equivalent" = "";
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.services.addToiTunesAsSpokenTrack - Add to Music as a Spoken Track - runWorkflowAsService" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
    "com.apple.services.encodeSelectedVideoFiles - Encode Selected Video Files - runWorkflowAsService" =     {
        "enabled_context_menu" = 0;
        "enabled_services_menu" = 0;
        "presentation_modes" =         {
            ContextMenu = 0;
            ServicesMenu = 0;
        };
    };
}'

### Spotlight
# Afficher la recherche Spotlight - DISABLED (CMD + SPACE)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 64 "<dict><key>enabled</key><false/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>49</integer><integer>1048576</integer></array><key>type</key><string>standard</string></dict></dict>"
# Afficher la fenêtre de recherche du Finder - DISABLED (ALT + CMD + SPACE)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 65 "<dict><key>enabled</key><false/><key>value</key><dict><key>parameters</key><array><integer>65535</integer><integer>49</integer><integer>1572864</integer></array><key>type</key><string>standard</string></dict></dict>"

### Accessibility
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 15 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 162 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 17 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 179 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 19 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 21 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 225 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 226 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 227 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 228 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 229 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 23 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 230 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 231 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 232 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 25 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 26 "$DISABLED_SHORTCUT"
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 59 "$DISABLED_SHORTCUT"

### Apps shortcuts
# Afficher le menu d'aide - ENABLED (CMD + SHIFT + H)
defaults write com.apple.symbolichotkeys AppleSymbolicHotKeys -dict-add 98 "<dict><key>enabled</key><true/><key>value</key><dict><key>parameters</key><array><integer>104</integer><integer>4</integer><integer>1179648</integer></array><key>type</key><string>standard</string></dict></dict>"

log_done 'Shortcuts configured! 🎉'
log_blue '⚠️ Please note that you should either restart or disconnet from you session for the changes to take effect!'


################################################################################
# Finder                                                                      #
################################################################################

log_task 'Configuring Finder...'

# Disable Tags
defaults write com.apple.finder ShowRecentTags -bool false

# Disable the automatic opening of a new tab in Finder when opening a folder
defaults write com.apple.finder FinderSpawnTab -bool false

# Change the default folder when opening a new Finder window
# PfHm = Home
# PfDe = Desktop
# PfLo = Last opened location
# PfCm = Computer
# PfVo = Volume
defaults write com.apple.finder NewWindowTarget -string "PfHm"

killall Finder

log_done 'Finder configured! 🎉'

###############################################################################
# Dock                                                                        #
###############################################################################

log_task 'Configuring Dock...'

# Remove the "recent applications" section
defaults write com.apple.dock "show-recents" -bool "false"

# Remove all default app icons
defaults write com.apple.dock persistent-apps -array

# Add custom app icons
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Arc.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/System/Applications/Messages.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Discord.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Spark Desktop.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/1Password.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/Visual Studio Code.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/Applications/iTerm.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'
defaults write com.apple.dock persistent-apps -array-add '<dict><key>tile-data</key><dict><key>file-data</key><dict><key>_CFURLString</key><string>/System/Applications/System Settings.app</string><key>_CFURLStringType</key><integer>0</integer></dict></dict></dict>'

# Remove all default persistent others
defaults write com.apple.dock persistent-others -array

# Add custom persistent others
# displayas:
# 0 = pile
# 1 = dossier
# arrangement:
# 1 = tri par nom
# 2 = date d’ajout
# 3 = date de modification
# 4 = date de création
# 5 = type
# showas:
# 0 = auto
# 1 = éventail (fan)
# 2 = grille
# 3 = liste

# Add home directory folder to Dock
defaults write com.apple.dock persistent-others -array-add '
<dict>
  <key>tile-data</key>
  <dict>
    <key>file-data</key>
    <dict>
      <key>_CFURLString</key>
      <string>file:///Users/thomas/</string>
      <key>_CFURLStringType</key>
      <integer>15</integer>
    </dict>
    <key>arrangement</key>
    <integer>1</integer> <!-- tri par nom -->
    <key>displayas</key>
    <integer>1</integer> <!-- afficher comme dossier -->
    <key>showas</key>
    <integer>2</integer> <!-- affichage grille -->
  </dict>
  <key>tile-type</key>
  <string>directory-tile</string>
</dict>'

# Add Downloads folder to Dock
defaults write com.apple.dock persistent-others -array-add '
<dict>
  <key>tile-data</key>
  <dict>
    <key>file-data</key>
    <dict>
      <key>_CFURLString</key>
      <string>file:///Users/thomas/Downloads/</string>
      <key>_CFURLStringType</key>
      <integer>15</integer>
    </dict>
    <key>arrangement</key>
    <integer>2</integer> <!-- tri par date dajout -->
    <key>displayas</key>
    <integer>0</integer> <!-- afficher comme pile -->
    <key>showas</key>
    <integer>1</integer> <!-- affichage éventail -->
  </dict>
  <key>tile-type</key>
  <string>directory-tile</string>
</dict>'

# Automatically hide and show
defaults write com.apple.dock autohide -bool true

# Remove the auto-hiding delay
defaults write com.apple.Dock autohide-delay -float 0

# Set size of Dock icons
defaults write com.apple.dock "tilesize" -int "48"

# Set size of Dock icons when magnified
defaults write com.apple.dock largesize -int 54
defaults write com.apple.dock magnification -bool true

killall Dock

log_done 'Dock configured! 🎉'

###############################################################################
# Login items                                                                #
###############################################################################

log_task 'Configuring login items...'

# Remove all default login items
# osascript -e 'tell application "System Events" to delete every login item' >/dev/null 2>&1

# Add custom login items
osascript -e 'tell application "System Events" to make login item at end with properties {name:"Raycast", path:"/Applications/Raycast.app", hidden:false}' >/dev/null 2>&1
osascript -e 'tell application "System Events" to make login item at end with properties {name:"1Password", path:"/Applications/1Password.app", hidden:false}' >/dev/null 2>&1
osascript -e 'tell application "System Events" to make login item at end with properties {name:"iTerm", path:"/Applications/iTerm.app", hidden:false}' >/dev/null 2>&1
osascript -e 'tell application "System Events" to make login item at end with properties {name:"Rectangle", path:"/Applications/Rectangle.app", hidden:false}' >/dev/null 2>&1

log_done 'Login items configured! 🎉'

###############################################################################
# Screen                                                                      #
###############################################################################

log_task 'Detecting main screen...'

# Fetch the main screen ID with displayplacer
OUTPUT=$(displayplacer list)
SCREEN_ID=""
CURRENT_ID=""

# Loop through the output to find the main screen ID
while IFS= read -r line; do
  if [[ "$line" =~ Persistent\ screen\ id:\ (.*) ]]; then
    CURRENT_ID="${BASH_REMATCH[1]}"
  fi

  if [[ "$line" =~ main\ display ]]; then
    SCREEN_ID="$CURRENT_ID"
  fi
done <<<"$OUTPUT"


if [ -z "$SCREEN_ID" ]; then
  error "No main screen found. Please check your displayplacer installation."
fi

BEST_RES=""
BEST_WIDTH=0
BEST_HEIGHT=0
BEST_HZ=0

inside_block=0
while IFS= read -r line; do
  if [[ "$line" =~ Persistent\ screen\ id:\ $SCREEN_ID ]]; then
    inside_block=1
  elif [[ "$inside_block" -eq 1 && "$line" =~ ^$ ]]; then
    inside_block=0
  elif [[ "$inside_block" -eq 1 && "$line" =~ res:([0-9]+)x([0-9]+)\ hz:([0-9]+).*scaling:on ]]; then
    width=${BASH_REMATCH[1]}
    height=${BASH_REMATCH[2]}
    hz=${BASH_REMATCH[3]}
    # Comparaison pour trouver la plus grande résolution et fréquence
    if ((width > BEST_WIDTH || (width == BEST_WIDTH && height > BEST_HEIGHT) || (width == BEST_WIDTH && height == BEST_HEIGHT && hz > BEST_HZ))); then
      BEST_WIDTH=$width
      BEST_HEIGHT=$height
      BEST_HZ=$hz
      BEST_RES="${width}x${height}"
    fi
  fi
done <<<"$OUTPUT"

if [ -z "$BEST_RES" ]; then
    error "No resolution with scaling:on found."
fi

# Set the best resolution
log_task "Updating main screen resolution to $BEST_RES at ${BEST_HZ}Hz..."
displayplacer "id:$SCREEN_ID res:$BEST_RES hz:$BEST_HZ scaling:on"

log_done "Main screen resolution updated to $BEST_RES at ${BEST_HZ}Hz! 🎉"

{{- end -}}
